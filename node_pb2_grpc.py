# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import node_pb2 as node__pb2


class NodeStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetInfo = channel.unary_unary(
        '/ensicoin_rpc.Node/GetInfo',
        request_serializer=node__pb2.GetInfoRequest.SerializeToString,
        response_deserializer=node__pb2.GetInfoReply.FromString,
        )
    self.PublishRawTx = channel.unary_unary(
        '/ensicoin_rpc.Node/PublishRawTx',
        request_serializer=node__pb2.PublishRawTxRequest.SerializeToString,
        response_deserializer=node__pb2.PublishRawTxReply.FromString,
        )
    self.PublishRawBlock = channel.unary_unary(
        '/ensicoin_rpc.Node/PublishRawBlock',
        request_serializer=node__pb2.PublishRawBlockRequest.SerializeToString,
        response_deserializer=node__pb2.PublishRawBlockReply.FromString,
        )
    self.GetBlockTemplate = channel.unary_stream(
        '/ensicoin_rpc.Node/GetBlockTemplate',
        request_serializer=node__pb2.GetBlockTemplateRequest.SerializeToString,
        response_deserializer=node__pb2.GetBlockTemplateReply.FromString,
        )
    self.GetBlockByHash = channel.unary_unary(
        '/ensicoin_rpc.Node/GetBlockByHash',
        request_serializer=node__pb2.GetBlockByHashRequest.SerializeToString,
        response_deserializer=node__pb2.GetBlockByHashReply.FromString,
        )
    self.GetTxByHash = channel.unary_unary(
        '/ensicoin_rpc.Node/GetTxByHash',
        request_serializer=node__pb2.GetTxByHashRequest.SerializeToString,
        response_deserializer=node__pb2.GetTxByHashReply.FromString,
        )
    self.ConnectPeer = channel.unary_unary(
        '/ensicoin_rpc.Node/ConnectPeer',
        request_serializer=node__pb2.ConnectPeerRequest.SerializeToString,
        response_deserializer=node__pb2.ConnectPeerReply.FromString,
        )
    self.DisconnectPeer = channel.unary_unary(
        '/ensicoin_rpc.Node/DisconnectPeer',
        request_serializer=node__pb2.DisconnectPeerRequest.SerializeToString,
        response_deserializer=node__pb2.DisconnectPeerReply.FromString,
        )
    self.GetBestBlocks = channel.unary_stream(
        '/ensicoin_rpc.Node/GetBestBlocks',
        request_serializer=node__pb2.GetBestBlocksRequest.SerializeToString,
        response_deserializer=node__pb2.GetBestBlocksReply.FromString,
        )
    self.GetNewTx = channel.unary_stream(
        '/ensicoin_rpc.Node/GetNewTx',
        request_serializer=node__pb2.GetNewTxRequest.SerializeToString,
        response_deserializer=node__pb2.GetNewTxReply.FromString,
        )


class NodeServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PublishRawTx(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PublishRawBlock(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetBlockTemplate(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetBlockByHash(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTxByHash(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ConnectPeer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DisconnectPeer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetBestBlocks(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetNewTx(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_NodeServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetInfo,
          request_deserializer=node__pb2.GetInfoRequest.FromString,
          response_serializer=node__pb2.GetInfoReply.SerializeToString,
      ),
      'PublishRawTx': grpc.unary_unary_rpc_method_handler(
          servicer.PublishRawTx,
          request_deserializer=node__pb2.PublishRawTxRequest.FromString,
          response_serializer=node__pb2.PublishRawTxReply.SerializeToString,
      ),
      'PublishRawBlock': grpc.unary_unary_rpc_method_handler(
          servicer.PublishRawBlock,
          request_deserializer=node__pb2.PublishRawBlockRequest.FromString,
          response_serializer=node__pb2.PublishRawBlockReply.SerializeToString,
      ),
      'GetBlockTemplate': grpc.unary_stream_rpc_method_handler(
          servicer.GetBlockTemplate,
          request_deserializer=node__pb2.GetBlockTemplateRequest.FromString,
          response_serializer=node__pb2.GetBlockTemplateReply.SerializeToString,
      ),
      'GetBlockByHash': grpc.unary_unary_rpc_method_handler(
          servicer.GetBlockByHash,
          request_deserializer=node__pb2.GetBlockByHashRequest.FromString,
          response_serializer=node__pb2.GetBlockByHashReply.SerializeToString,
      ),
      'GetTxByHash': grpc.unary_unary_rpc_method_handler(
          servicer.GetTxByHash,
          request_deserializer=node__pb2.GetTxByHashRequest.FromString,
          response_serializer=node__pb2.GetTxByHashReply.SerializeToString,
      ),
      'ConnectPeer': grpc.unary_unary_rpc_method_handler(
          servicer.ConnectPeer,
          request_deserializer=node__pb2.ConnectPeerRequest.FromString,
          response_serializer=node__pb2.ConnectPeerReply.SerializeToString,
      ),
      'DisconnectPeer': grpc.unary_unary_rpc_method_handler(
          servicer.DisconnectPeer,
          request_deserializer=node__pb2.DisconnectPeerRequest.FromString,
          response_serializer=node__pb2.DisconnectPeerReply.SerializeToString,
      ),
      'GetBestBlocks': grpc.unary_stream_rpc_method_handler(
          servicer.GetBestBlocks,
          request_deserializer=node__pb2.GetBestBlocksRequest.FromString,
          response_serializer=node__pb2.GetBestBlocksReply.SerializeToString,
      ),
      'GetNewTx': grpc.unary_stream_rpc_method_handler(
          servicer.GetNewTx,
          request_deserializer=node__pb2.GetNewTxRequest.FromString,
          response_serializer=node__pb2.GetNewTxReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ensicoin_rpc.Node', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
